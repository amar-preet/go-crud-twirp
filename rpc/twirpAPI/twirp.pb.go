// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: rpc/twirpAPI/twirp.proto

package twirpAPI

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_rpc_twirpAPI_twirp_proto_rawDescGZIP(), []int{0}
}

type Album struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Artist string `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	Price  int32  `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Album) Reset() {
	*x = Album{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Album) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Album) ProtoMessage() {}

func (x *Album) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Album.ProtoReflect.Descriptor instead.
func (*Album) Descriptor() ([]byte, []int) {
	return file_rpc_twirpAPI_twirp_proto_rawDescGZIP(), []int{1}
}

func (x *Album) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Album) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Album) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *Album) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type GetAlbumsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAlbumsReq) Reset() {
	*x = GetAlbumsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlbumsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlbumsReq) ProtoMessage() {}

func (x *GetAlbumsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlbumsReq.ProtoReflect.Descriptor instead.
func (*GetAlbumsReq) Descriptor() ([]byte, []int) {
	return file_rpc_twirpAPI_twirp_proto_rawDescGZIP(), []int{2}
}

type GetAlbumsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums []*Album `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
}

func (x *GetAlbumsResp) Reset() {
	*x = GetAlbumsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlbumsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlbumsResp) ProtoMessage() {}

func (x *GetAlbumsResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlbumsResp.ProtoReflect.Descriptor instead.
func (*GetAlbumsResp) Descriptor() ([]byte, []int) {
	return file_rpc_twirpAPI_twirp_proto_rawDescGZIP(), []int{3}
}

func (x *GetAlbumsResp) GetAlbums() []*Album {
	if x != nil {
		return x.Albums
	}
	return nil
}

type PostAlbumsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title  string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Artist string `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`
	Price  int32  `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *PostAlbumsReq) Reset() {
	*x = PostAlbumsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAlbumsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAlbumsReq) ProtoMessage() {}

func (x *PostAlbumsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAlbumsReq.ProtoReflect.Descriptor instead.
func (*PostAlbumsReq) Descriptor() ([]byte, []int) {
	return file_rpc_twirpAPI_twirp_proto_rawDescGZIP(), []int{4}
}

func (x *PostAlbumsReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostAlbumsReq) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *PostAlbumsReq) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type PostAlbumsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album *Album `protobuf:"bytes,1,opt,name=album,proto3" json:"album,omitempty"`
}

func (x *PostAlbumsResp) Reset() {
	*x = PostAlbumsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostAlbumsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostAlbumsResp) ProtoMessage() {}

func (x *PostAlbumsResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostAlbumsResp.ProtoReflect.Descriptor instead.
func (*PostAlbumsResp) Descriptor() ([]byte, []int) {
	return file_rpc_twirpAPI_twirp_proto_rawDescGZIP(), []int{5}
}

func (x *PostAlbumsResp) GetAlbum() *Album {
	if x != nil {
		return x.Album
	}
	return nil
}

type GetAlbumByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAlbumByIDReq) Reset() {
	*x = GetAlbumByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlbumByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlbumByIDReq) ProtoMessage() {}

func (x *GetAlbumByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlbumByIDReq.ProtoReflect.Descriptor instead.
func (*GetAlbumByIDReq) Descriptor() ([]byte, []int) {
	return file_rpc_twirpAPI_twirp_proto_rawDescGZIP(), []int{6}
}

func (x *GetAlbumByIDReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAlbumByIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album *Album `protobuf:"bytes,1,opt,name=album,proto3" json:"album,omitempty"`
}

func (x *GetAlbumByIDResp) Reset() {
	*x = GetAlbumByIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlbumByIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlbumByIDResp) ProtoMessage() {}

func (x *GetAlbumByIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlbumByIDResp.ProtoReflect.Descriptor instead.
func (*GetAlbumByIDResp) Descriptor() ([]byte, []int) {
	return file_rpc_twirpAPI_twirp_proto_rawDescGZIP(), []int{7}
}

func (x *GetAlbumByIDResp) GetAlbum() *Album {
	if x != nil {
		return x.Album
	}
	return nil
}

type DeleteAlbumByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAlbumByIDReq) Reset() {
	*x = DeleteAlbumByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlbumByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlbumByIDReq) ProtoMessage() {}

func (x *DeleteAlbumByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlbumByIDReq.ProtoReflect.Descriptor instead.
func (*DeleteAlbumByIDReq) Descriptor() ([]byte, []int) {
	return file_rpc_twirpAPI_twirp_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAlbumByIDReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteAlbumByIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteAlbumByIDResp) Reset() {
	*x = DeleteAlbumByIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlbumByIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlbumByIDResp) ProtoMessage() {}

func (x *DeleteAlbumByIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlbumByIDResp.ProtoReflect.Descriptor instead.
func (*DeleteAlbumByIDResp) Descriptor() ([]byte, []int) {
	return file_rpc_twirpAPI_twirp_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteAlbumByIDResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateAlbumByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Artist string `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	Price  int32  `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *UpdateAlbumByIDReq) Reset() {
	*x = UpdateAlbumByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlbumByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlbumByIDReq) ProtoMessage() {}

func (x *UpdateAlbumByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlbumByIDReq.ProtoReflect.Descriptor instead.
func (*UpdateAlbumByIDReq) Descriptor() ([]byte, []int) {
	return file_rpc_twirpAPI_twirp_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAlbumByIDReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAlbumByIDReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateAlbumByIDReq) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *UpdateAlbumByIDReq) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type UpdateAlbumByIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album *Album `protobuf:"bytes,1,opt,name=album,proto3" json:"album,omitempty"`
}

func (x *UpdateAlbumByIDResp) Reset() {
	*x = UpdateAlbumByIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlbumByIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlbumByIDResp) ProtoMessage() {}

func (x *UpdateAlbumByIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_twirpAPI_twirp_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlbumByIDResp.ProtoReflect.Descriptor instead.
func (*UpdateAlbumByIDResp) Descriptor() ([]byte, []int) {
	return file_rpc_twirpAPI_twirp_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateAlbumByIDResp) GetAlbum() *Album {
	if x != nil {
		return x.Album
	}
	return nil
}

var File_rpc_twirpAPI_twirp_proto protoreflect.FileDescriptor

var file_rpc_twirpAPI_twirp_proto_rawDesc = []byte{
	0x0a, 0x18, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x77, 0x69, 0x72, 0x70, 0x41, 0x50, 0x49, 0x2f, 0x74,
	0x77, 0x69, 0x72, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x77, 0x69, 0x72,
	0x70, 0x41, 0x50, 0x49, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x5b, 0x0a,
	0x05, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x22, 0x38, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x06, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x77,
	0x69, 0x72, 0x70, 0x41, 0x50, 0x49, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x06, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x73, 0x22, 0x53, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x37, 0x0a, 0x0e, 0x50, 0x6f, 0x73,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x05, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x77, 0x69,
	0x72, 0x70, 0x41, 0x50, 0x49, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x05, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x77, 0x69, 0x72, 0x70,
	0x41, 0x50, 0x49, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x68, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x3c, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x77, 0x69, 0x72, 0x70, 0x41,
	0x50, 0x49, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x32,
	0xfa, 0x02, 0x0a, 0x08, 0x54, 0x77, 0x69, 0x72, 0x70, 0x41, 0x50, 0x49, 0x12, 0x3e, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x16, 0x2e, 0x74, 0x77, 0x69, 0x72,
	0x70, 0x41, 0x50, 0x49, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x74, 0x77, 0x69, 0x72, 0x70, 0x41, 0x50, 0x49, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a,
	0x50, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x17, 0x2e, 0x74, 0x77, 0x69,
	0x72, 0x70, 0x41, 0x50, 0x49, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x74, 0x77, 0x69, 0x72, 0x70, 0x41, 0x50, 0x49, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x19, 0x2e, 0x74, 0x77, 0x69, 0x72, 0x70, 0x41, 0x50, 0x49, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x74, 0x77, 0x69,
	0x72, 0x70, 0x41, 0x50, 0x49, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x2e, 0x74, 0x77,
	0x69, 0x72, 0x70, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x74, 0x77, 0x69, 0x72,
	0x70, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x2e,
	0x74, 0x77, 0x69, 0x72, 0x70, 0x41, 0x50, 0x49, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x74, 0x77,
	0x69, 0x72, 0x70, 0x41, 0x50, 0x49, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x21, 0x5a, 0x1f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x77, 0x69, 0x72, 0x70, 0x41, 0x50, 0x49, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_twirpAPI_twirp_proto_rawDescOnce sync.Once
	file_rpc_twirpAPI_twirp_proto_rawDescData = file_rpc_twirpAPI_twirp_proto_rawDesc
)

func file_rpc_twirpAPI_twirp_proto_rawDescGZIP() []byte {
	file_rpc_twirpAPI_twirp_proto_rawDescOnce.Do(func() {
		file_rpc_twirpAPI_twirp_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_twirpAPI_twirp_proto_rawDescData)
	})
	return file_rpc_twirpAPI_twirp_proto_rawDescData
}

var file_rpc_twirpAPI_twirp_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_rpc_twirpAPI_twirp_proto_goTypes = []interface{}{
	(*Empty)(nil),               // 0: twirpAPI.Empty
	(*Album)(nil),               // 1: twirpAPI.Album
	(*GetAlbumsReq)(nil),        // 2: twirpAPI.GetAlbumsReq
	(*GetAlbumsResp)(nil),       // 3: twirpAPI.GetAlbumsResp
	(*PostAlbumsReq)(nil),       // 4: twirpAPI.PostAlbumsReq
	(*PostAlbumsResp)(nil),      // 5: twirpAPI.PostAlbumsResp
	(*GetAlbumByIDReq)(nil),     // 6: twirpAPI.GetAlbumByIDReq
	(*GetAlbumByIDResp)(nil),    // 7: twirpAPI.GetAlbumByIDResp
	(*DeleteAlbumByIDReq)(nil),  // 8: twirpAPI.DeleteAlbumByIDReq
	(*DeleteAlbumByIDResp)(nil), // 9: twirpAPI.DeleteAlbumByIDResp
	(*UpdateAlbumByIDReq)(nil),  // 10: twirpAPI.UpdateAlbumByIDReq
	(*UpdateAlbumByIDResp)(nil), // 11: twirpAPI.UpdateAlbumByIDResp
}
var file_rpc_twirpAPI_twirp_proto_depIdxs = []int32{
	1,  // 0: twirpAPI.GetAlbumsResp.albums:type_name -> twirpAPI.Album
	1,  // 1: twirpAPI.PostAlbumsResp.album:type_name -> twirpAPI.Album
	1,  // 2: twirpAPI.GetAlbumByIDResp.album:type_name -> twirpAPI.Album
	1,  // 3: twirpAPI.UpdateAlbumByIDResp.album:type_name -> twirpAPI.Album
	2,  // 4: twirpAPI.TwirpAPI.GetAlbums:input_type -> twirpAPI.GetAlbumsReq
	4,  // 5: twirpAPI.TwirpAPI.PostAlbums:input_type -> twirpAPI.PostAlbumsReq
	6,  // 6: twirpAPI.TwirpAPI.GetAlbumByID:input_type -> twirpAPI.GetAlbumByIDReq
	8,  // 7: twirpAPI.TwirpAPI.DeleteAlbumByID:input_type -> twirpAPI.DeleteAlbumByIDReq
	10, // 8: twirpAPI.TwirpAPI.UpdateAlbumByID:input_type -> twirpAPI.UpdateAlbumByIDReq
	3,  // 9: twirpAPI.TwirpAPI.GetAlbums:output_type -> twirpAPI.GetAlbumsResp
	5,  // 10: twirpAPI.TwirpAPI.PostAlbums:output_type -> twirpAPI.PostAlbumsResp
	7,  // 11: twirpAPI.TwirpAPI.GetAlbumByID:output_type -> twirpAPI.GetAlbumByIDResp
	9,  // 12: twirpAPI.TwirpAPI.DeleteAlbumByID:output_type -> twirpAPI.DeleteAlbumByIDResp
	11, // 13: twirpAPI.TwirpAPI.UpdateAlbumByID:output_type -> twirpAPI.UpdateAlbumByIDResp
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_rpc_twirpAPI_twirp_proto_init() }
func file_rpc_twirpAPI_twirp_proto_init() {
	if File_rpc_twirpAPI_twirp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_twirpAPI_twirp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twirpAPI_twirp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Album); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twirpAPI_twirp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlbumsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twirpAPI_twirp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlbumsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twirpAPI_twirp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAlbumsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twirpAPI_twirp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostAlbumsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twirpAPI_twirp_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlbumByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twirpAPI_twirp_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlbumByIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twirpAPI_twirp_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlbumByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twirpAPI_twirp_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlbumByIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twirpAPI_twirp_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlbumByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_twirpAPI_twirp_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlbumByIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_twirpAPI_twirp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_twirpAPI_twirp_proto_goTypes,
		DependencyIndexes: file_rpc_twirpAPI_twirp_proto_depIdxs,
		MessageInfos:      file_rpc_twirpAPI_twirp_proto_msgTypes,
	}.Build()
	File_rpc_twirpAPI_twirp_proto = out.File
	file_rpc_twirpAPI_twirp_proto_rawDesc = nil
	file_rpc_twirpAPI_twirp_proto_goTypes = nil
	file_rpc_twirpAPI_twirp_proto_depIdxs = nil
}
